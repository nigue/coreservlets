<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="courses.hibernate.vo.EBill" table="EBILL">
		<id name="ebillId" column="EBILL_ID">
			<generator class="native" />
		</id>
		<property name="minimumAmountDue" column="MINIMUM_AMOUNT_DUE"
			type="double" />
		<property name="balance" column="BALANCE" type="double" />
		<property name="dueDate" column="DUE_DATE" type="timestamp" />
		<property name="amountPaid" column="AMOUNT_PAID" type="double" />
		<property name="datePaid" column="DATE_PAID" type="timestamp" />
		<property name="receivedDate" column="RECEIVED_DATE" type="timestamp" />
		<property name="creationDate" column="CREATION_DATE" type="timestamp"
			insert="false" update="false" generated="insert" />
		<property name="updateDate" column="UPDATE_DATE" type="timestamp" 
			insert="false" update="false" generated="always" />
		<many-to-one name="accountTransaction" cascade="save-update, merge"
			class="courses.hibernate.vo.AccountTransaction" access="field"
			column="ACCOUNT_TRANSACTION_ID" unique="true" />
		<many-to-one name="ebiller" column="EBILLER_ID"
			class="courses.hibernate.vo.EBiller" access="field" />
		<many-to-one name="account" column="ACCOUNT_ID"
			class="courses.hibernate.vo.Account" access="field" />
		<sql-insert callable="true" check="param">{call create_ebill(?, ?, ?, ?, ?, ?,
			?, ?, ?, ?, ?)}</sql-insert>
	</class>
	<sql-query name="getEbills" callable="true">
		<return alias="ebill" class="courses.hibernate.vo.EBill"/>
		{ ? = call get_ebills() }
	</sql-query>
</hibernate-mapping>