<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="courses.hibernate.vo.EBill" table="EBILL">
		<composite-id name="ebillId" class="courses.hibernate.vo.EBillId">
			<key-property name="accountId" column="ACCOUNT_ID" type="long" />
			<key-property name="ebillerId" column="EBILLER_ID" type="long" />
			<key-property name="dueDate" column="DUE_DATE" type="timestamp" />
		</composite-id>
		<property name="minimumAmountDue" column="MINIMUM_AMOUNT_DUE"
			type="double" />
		<property name="balance" column="BALANCE" type="double" />
		<property name="amountPaid" column="AMOUNT_PAID" type="double" />
		<property name="datePaid" column="DATE_PAID" type="timestamp" />
		<property name="receivedDate" column="RECEIVED_DATE" type="timestamp" />
		<many-to-one name="accountTransaction"
			class="courses.hibernate.vo.AccountTransaction" access="field"
			column="ACCOUNT_TRANSACTION_ID" unique="true" />
		<!--
			Must have insert="false" update="false" because ids for the objects
			are part of the composite key. The relationships are managed via the
			composite key elements rather than the M:1 relationship.
		-->
		<many-to-one name="ebiller" column="EBILLER_ID"
			class="courses.hibernate.vo.EBiller" access="field" insert="false"
			update="false" />
		<many-to-one name="account" column="ACCOUNT_ID"
			class="courses.hibernate.vo.Account" access="field" insert="false"
			update="false" />
	</class>
</hibernate-mapping>